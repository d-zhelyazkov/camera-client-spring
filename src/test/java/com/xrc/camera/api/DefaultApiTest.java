/*
 * Camera API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0-oas3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.xrc.camera.api;

import com.xrc.camera.model.AECompensationInfo;
import com.xrc.camera.model.AECompensationValue;
import com.xrc.camera.model.AELockInfo;
import com.xrc.camera.model.AELockValue;
import java.io.File;
import com.xrc.camera.model.FocusModeInfo;
import com.xrc.camera.model.FocusModeValue;
import com.xrc.camera.model.ISOInfo;
import com.xrc.camera.model.ISOValue;
import com.xrc.camera.model.Setting;
import com.xrc.camera.model.SettingInfo;
import com.xrc.camera.model.SettingValue;
import org.junit.Test;
import org.junit.Ignore;


/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Get image.
     *
     * Retrieve the current camera image.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void imageGetTest() {
        File response = api.imageGet();

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void settingsAECOMPENSATIONGetTest() {
        AECompensationInfo response = api.settingsAECOMPENSATIONGet();

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void settingsAECOMPENSATIONPutTest() {
        AECompensationValue body = null;
        api.settingsAECOMPENSATIONPut(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void settingsAELOCKGetTest() {
        AELockInfo response = api.settingsAELOCKGet();

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void settingsAELOCKPutTest() {
        AELockValue body = null;
        api.settingsAELOCKPut(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void settingsFOCUSMODEGetTest() {
        FocusModeInfo response = api.settingsFOCUSMODEGet();

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void settingsFOCUSMODEPutTest() {
        FocusModeValue body = null;
        api.settingsFOCUSMODEPut(body);

        // TODO: test validations
    }
    /**
     * Get settings.
     *
     * Retrieve a set of the exposed settings of the camera.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void settingsGetTest() {
        java.util.List<Setting> response = api.settingsGet();

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void settingsISOGetTest() {
        ISOInfo response = api.settingsISOGet();

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void settingsISOPutTest() {
        ISOValue body = null;
        api.settingsISOPut(body);

        // TODO: test validations
    }
    /**
     * Get setting info.
     *
     * Retrieve information about the specified setting.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void settingsSettingGetTest() {
        String setting = null;
        SettingInfo response = api.settingsSettingGet(setting);

        // TODO: test validations
    }
    /**
     * Set setting value.
     *
     * Update the value of the specified setting. Refer to /settings/{setting} for the valid values of the specified setting. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void settingsSettingPutTest() {
        SettingValue body = null;
        String setting = null;
        api.settingsSettingPut(body, setting);

        // TODO: test validations
    }
}
